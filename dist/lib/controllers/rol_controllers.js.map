{"version":3,"sources":["../../../lib/controllers/rol_controllers.js"],"names":["index","req","res","rols","Rol","findAll","json","data","map","rol","toJSON","show","findByPk","params","id","status","message","param","create","body","name","undefined","send","err","update","save"],"mappings":";;;;;;;AAAA;;;;AAEO,MAAMA,KAAK,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrC,QAAMC,IAAI,GAAG,MAAMC,aAAIC,OAAJ,CAAY,EAAZ,CAAnB;AACAH,EAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,IAAAA,IAAI,EAAEJ,IAAI,CAACK,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACC,MAAJ,EAAlB;AAAR,GAAT;AACH,CAHM;;;;AAKA,MAAMC,IAAI,GAAG,OAAOV,GAAP,EAAYC,GAAZ,KAAoB;AACpC,QAAMC,IAAI,GAAG,MAAMC,aAAIQ,QAAJ,CAAaX,GAAG,CAACY,MAAJ,CAAWC,EAAxB,CAAnB;;AACA,MAAIX,IAAJ,EAAU;AACND,IAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,MAAAA,IAAI,EAAEJ,IAAI,CAACO,MAAL;AAAR,KAAT;AACH,GAFD,MAEO;AACHR,IAAAA,GAAG,CACEa,MADL,CACY,GADZ,EAEKT,IAFL,CAEU;AAAEU,MAAAA,OAAO,EAAG,oCAAmCf,GAAG,CAACgB,KAAJ,CAAUH,EAAG;AAA5D,KAFV;AAGH;AACJ,CATM;;;;AAUA,MAAMI,MAAM,GAAG,OAAOjB,GAAP,EAAYC,GAAZ,KAAoB;AACtC,MAAI;AACA,QAAID,GAAG,CAACkB,IAAJ,CAASC,IAAT,KAAkBC,SAAtB,EAAiC;AAC7B,YAAMlB,IAAI,GAAG,MAAMC,aAAIc,MAAJ,CAAW;AAAEE,QAAAA,IAAI,EAAEnB,GAAG,CAACkB,IAAJ,CAASC;AAAjB,OAAX,CAAnB;AACAlB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB;AAAER,QAAAA,EAAE,EAAEX,IAAI,CAACW;AAAX,OAArB;AACH,KAHD,MAIK;AACDZ,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB,kBAArB;AACH;AACJ,GARD,CAQE,OAAOiB,GAAP,EAAY;AACV,WAAOrB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqBC,GAArB,CAAP;AACH;AACJ,CAZM;;;;AAcA,MAAMC,MAAM,GAAG,OAAOvB,GAAP,EAAYC,GAAZ,KAAoB;AACtC,MAAI;AACA,QAAID,GAAG,CAACkB,IAAJ,CAASC,IAAT,KAAkBC,SAAtB,EAAiC;AAC7B,YAAMlB,IAAI,GAAG,MAAMC,aAAIQ,QAAJ,CAAaX,GAAG,CAACY,MAAJ,CAAWC,EAAxB,CAAnB;AACAX,MAAAA,IAAI,CAACiB,IAAL,GAAYnB,GAAG,CAACkB,IAAJ,CAASC,IAArB;AACA,YAAMjB,IAAI,CAACsB,IAAL,EAAN,CAH6B,CAI7B;;AACAvB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB;AAAER,QAAAA,EAAE,EAAEX,IAAI,CAACiB;AAAX,OAArB;AACH,KAND,MAMO;AACHlB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB,kBAArB;AACH;AACJ,GAVD,CAUE,OAAOiB,GAAP,EAAY;AACV,WAAOrB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqBC,GAArB,CAAP;AACH;AACJ,CAdM","sourcesContent":["import Rol from '../models/rol'\r\n\r\nexport const index = async (req, res) => {\r\n    const rols = await Rol.findAll({});\r\n    res.json({ data: rols.map((rol) => rol.toJSON()) });\r\n}\r\n\r\nexport const show = async (req, res) => {\r\n    const rols = await Rol.findByPk(req.params.id);\r\n    if (rols) {\r\n        res.json({ data: rols.toJSON() });\r\n    } else {\r\n        res\r\n            .status(404)\r\n            .json({ message: `No se encontro la rols con el id ${req.param.id}` });\r\n    }\r\n}\r\nexport const create = async (req, res) => {\r\n    try {\r\n        if (req.body.name !== undefined) {\r\n            const rols = await Rol.create({ name: req.body.name });\r\n            res.status(200).send({ id: rols.id });\r\n        }\r\n        else {\r\n            res.status(400).json('name no recibido');\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send(err);\r\n    }\r\n}\r\n\r\nexport const update = async (req, res) => {\r\n    try {\r\n        if (req.body.name !== undefined) {\r\n            const rols = await Rol.findByPk(req.params.id);\r\n            rols.name = req.body.name;\r\n            await rols.save();\r\n            //res.status(200).send({ id: rols.id });\r\n            res.status(200).send({ id: rols.name });\r\n        } else {\r\n            res.status(400).json('name no recibido');\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send(err);\r\n    }\r\n}"],"file":"rol_controllers.js"}