{"version":3,"sources":["../../../lib/controllers/carrera_controllers.js"],"names":["index","req","res","carreras","Carrera","findAll","json","data","map","carrera","toJSON","show","findByPk","params","id","status","message","param","create","body","nombre","undefined","send","err","update","save"],"mappings":";;;;;;;AAAA;;;;AAEO,MAAMA,KAAK,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrC,QAAMC,QAAQ,GAAG,MAAMC,iBAAQC,OAAR,CAAgB,EAAhB,CAAvB;AACAH,EAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,IAAAA,IAAI,EAAEJ,QAAQ,CAACK,GAAT,CAAcC,OAAD,IAAaA,OAAO,CAACC,MAAR,EAA1B;AAAR,GAAT;AACH,CAHM;;;;AAKA,MAAMC,IAAI,GAAG,OAAOV,GAAP,EAAYC,GAAZ,KAAoB;AACpC,QAAMO,OAAO,GAAG,MAAML,iBAAQQ,QAAR,CAAiBX,GAAG,CAACY,MAAJ,CAAWC,EAA5B,CAAtB;;AACA,MAAIL,OAAJ,EAAa;AACTP,IAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,MAAAA,IAAI,EAAEE,OAAO,CAACC,MAAR;AAAR,KAAT;AACH,GAFD,MAEO;AACHR,IAAAA,GAAG,CACEa,MADL,CACY,GADZ,EAEKT,IAFL,CAEU;AAAEU,MAAAA,OAAO,EAAG,uCAAsCf,GAAG,CAACgB,KAAJ,CAAUH,EAAG;AAA/D,KAFV;AAGH;AACJ,CATM;;;;AAUA,MAAMI,MAAM,GAAG,OAAOjB,GAAP,EAAYC,GAAZ,KAAoB;AACtC,MAAI;AACA,QAAID,GAAG,CAACkB,IAAJ,CAASC,MAAT,KAAoBC,SAAxB,EAAmC;AAC/B,YAAMZ,OAAO,GAAG,MAAML,iBAAQc,MAAR,CAAe;AAAEE,QAAAA,MAAM,EAAEnB,GAAG,CAACkB,IAAJ,CAASC;AAAnB,OAAf,CAAtB;AACAlB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB;AAAER,QAAAA,EAAE,EAAEL,OAAO,CAACK;AAAd,OAArB;AACH,KAHD,MAIK;AACDZ,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB,oBAArB;AACH;AACJ,GARD,CAQE,OAAOiB,GAAP,EAAY;AACV,WAAOrB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqBC,GAArB,CAAP;AACH;AACJ,CAZM;;;;AAcA,MAAMC,MAAM,GAAG,OAAOvB,GAAP,EAAYC,GAAZ,KAAoB;AACtC,MAAI;AACA,QAAID,GAAG,CAACkB,IAAJ,CAASC,MAAT,KAAoBC,SAAxB,EAAmC;AAC/B,YAAMZ,OAAO,GAAG,MAAML,iBAAQQ,QAAR,CAAiBX,GAAG,CAACY,MAAJ,CAAWC,EAA5B,CAAtB;AACAL,MAAAA,OAAO,CAACW,MAAR,GAAiBnB,GAAG,CAACkB,IAAJ,CAASC,MAA1B;AACA,YAAMX,OAAO,CAACgB,IAAR,EAAN,CAH+B,CAI/B;;AACAvB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB;AAAER,QAAAA,EAAE,EAAEL,OAAO,CAACW;AAAd,OAArB;AACH,KAND,MAMO;AACHlB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB,oBAArB;AACH;AACJ,GAVD,CAUE,OAAOiB,GAAP,EAAY;AACV,WAAOrB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqBC,GAArB,CAAP;AACH;AACJ,CAdM","sourcesContent":["import Carrera from '../models/carrera'\r\n\r\nexport const index = async (req, res) => {\r\n    const carreras = await Carrera.findAll({});\r\n    res.json({ data: carreras.map((carrera) => carrera.toJSON()) });\r\n}\r\n\r\nexport const show = async (req, res) => {\r\n    const carrera = await Carrera.findByPk(req.params.id);\r\n    if (carrera) {\r\n        res.json({ data: carrera.toJSON() });\r\n    } else {\r\n        res\r\n            .status(404)\r\n            .json({ message: `No se encontro la carrera con el id ${req.param.id}` });\r\n    }\r\n}\r\nexport const create = async (req, res) => {\r\n    try {\r\n        if (req.body.nombre !== undefined) {\r\n            const carrera = await Carrera.create({ nombre: req.body.nombre });\r\n            res.status(200).send({ id: carrera.id });\r\n        }\r\n        else {\r\n            res.status(400).json('Nombre no recibido');\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send(err);\r\n    }\r\n}\r\n\r\nexport const update = async (req, res) => {\r\n    try {\r\n        if (req.body.nombre !== undefined) {\r\n            const carrera = await Carrera.findByPk(req.params.id);\r\n            carrera.nombre = req.body.nombre;\r\n            await carrera.save();\r\n            //res.status(200).send({ id: carrera.id });\r\n            res.status(200).send({ id: carrera.nombre });\r\n        } else {\r\n            res.status(400).json('Nombre no recibido');\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send(err);\r\n    }\r\n}"],"file":"carrera_controllers.js"}