{"version":3,"sources":["../../../lib/routes/utils.js"],"names":["withErrorHandling","fn","req","res","next","Promise","resolve","catch","errorAwareRouter","basicRouter","express","Router","newRouter","params","get","path","controller","middleware","post","patch","delete","put","parseAuthHeader","header","matches","match","verificarAutenticacion","accessToken","headers","authorization","status","send","payload","jwt","verify","JWT_SECRET","usuario","e","json","mensaje"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport jwt from 'jsonwebtoken';\r\nimport { JWT_SECRET } from '../config';\r\n\r\nexport const withErrorHandling = (fn) => (req, res, next) =>\r\n  Promise.resolve(fn(req, res, next)).catch(next);\r\n\r\nexport function errorAwareRouter() {\r\n  const basicRouter = express.Router();\r\n  function newRouter(...params) {\r\n    basicRouter(...params);\r\n  }\r\n  newRouter.get = function (path, controller, middleware) {\r\n    if (middleware) {\r\n      basicRouter.get(path, middleware, withErrorHandling(controller));\r\n    } else {\r\n      basicRouter.get(path, withErrorHandling(controller));\r\n    }\r\n  };\r\n\r\n  newRouter.post = function (path, controller, middleware) {\r\n    if (middleware) {\r\n      basicRouter.post(path, middleware, withErrorHandling(controller));\r\n    } else {\r\n      basicRouter.post(path, withErrorHandling(controller));\r\n    }\r\n  };\r\n\r\n  newRouter.patch = function (path, controller, middleware) {\r\n    if (middleware) {\r\n      basicRouter.patch(path, middleware, withErrorHandling(controller));\r\n    } else {\r\n      basicRouter.patch(path, withErrorHandling(controller));\r\n    }\r\n  };\r\n\r\n  newRouter.delete = function (path, controller, middleware) {\r\n    if (middleware) {\r\n      basicRouter.delete(path, middleware, withErrorHandling(controller));\r\n    } else {\r\n      basicRouter.delete(path, withErrorHandling(controller));\r\n    }\r\n  };\r\n\r\n  newRouter.put = function (path, controller, middleware) {\r\n    if (middleware) {\r\n      basicRouter.put(path, middleware, withErrorHandling(controller));\r\n    } else {\r\n      basicRouter.put(path, withErrorHandling(controller));\r\n    }\r\n  };\r\n\r\n  return newRouter;\r\n}\r\n\r\nconst parseAuthHeader = (header) => {\r\n  const matches = header?.match(/Bearer (.+)/);\r\n  return matches?.[1]; // Si la regexp funcionó, el token es el segundo elemento del array\r\n};\r\n\r\nexport async function verificarAutenticacion(req, res, next) {\r\n  const accessToken = parseAuthHeader(req.headers.authorization);\r\n\r\n  if (!accessToken) {\r\n    return res.status(401).send();\r\n  }\r\n\r\n  try {\r\n    const payload = await jwt.verify(accessToken, JWT_SECRET);\r\n    req.usuario = payload;\r\n    next();\r\n  } catch (e) {\r\n    // TODO: manejar adecuadamente según el tipo de error. Ver https://www.npmjs.com/package/jsonwebtoken#errors--codes\r\n    return res\r\n      .status(401)\r\n      .json({ mensaje: 'Token invalido. Por favor vuelva a loguearse' });\r\n  }\r\n}\r\n"],"file":"utils.js"}