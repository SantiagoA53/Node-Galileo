{"version":3,"sources":["../../../lib/models/index.js"],"names":["thisFile","module","filename","dbConfig","config","db","initSequelize","use_env_variable","Sequelize","process","env","database","username","password","sequelize","isHiddenFile","file","startsWith","isJsFile","isTestFile","includes","isThisFile","fs","readdirSync","__dirname","filter","forEach","model","require","default","init","name","Object","keys","modelName","associate"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,QAAQ,GAAG,oBAASC,MAAM,CAACC,QAAhB,CAAjB;AACA,MAAMC,QAAQ,GAAGC,gBAAOC,EAAxB;;AAEA,SAASC,aAAT,GAAyB;AACvB,SAAOH,QAAQ,CAACI,gBAAT,GACH,IAAIC,kBAAJ,CAAcC,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACI,gBAArB,CAAd,CADG,GAEH,IAAIC,kBAAJ,CACEL,QAAQ,CAACQ,QADX,EAEER,QAAQ,CAACS,QAFX,EAGET,QAAQ,CAACU,QAHX,EAIEV,QAJF,CAFJ;AAQD;;AAED,MAAMW,SAAS,GAAGR,aAAa,EAA/B;;AAEA,MAAMS,YAAY,GAAIC,IAAD,IAAUA,IAAI,CAACC,UAAL,CAAgB,GAAhB,CAA/B;;AACA,MAAMC,QAAQ,GAAIF,IAAD,IAAU,mBAAQA,IAAR,MAAkB,KAA7C;;AACA,MAAMG,UAAU,GAAIH,IAAD,IAAUA,IAAI,CAACI,QAAL,CAAc,UAAd,CAA7B;;AACA,MAAMC,UAAU,GAAIL,IAAD,IAAUA,IAAI,KAAKhB,QAAtC;;AAEA,MAAMK,EAAE,GAAG,EAAX;;AAEAiB,YAAGC,WAAH,CAAeC,SAAf,EACGC,MADH,CAEKT,IAAD,IACE,CAACD,YAAY,CAACC,IAAD,CAAb,IACA,CAACK,UAAU,CAACL,IAAD,CADX,IAEAE,QAAQ,CAACF,IAAD,CAFR,IAGA,CAACG,UAAU,CAACH,IAAD,CANjB,EAQGU,OARH,CAQYV,IAAD,IAAU;AACjB,QAAMW,KAAK,GAAGC,OAAO,CAAC,gBAAKJ,SAAL,EAAgBR,IAAhB,CAAD,CAAP,CAA+Ba,OAA7C;;AACAF,EAAAA,KAAK,CAACG,IAAN,CAAWhB,SAAX;AACAT,EAAAA,EAAE,CAACsB,KAAK,CAACI,IAAP,CAAF,GAAiBJ,KAAjB;AACD,CAZH;;AAcAK,MAAM,CAACC,IAAP,CAAY5B,EAAZ,EAAgBqB,OAAhB,CAAyBQ,SAAD,IAAe;AACrC,MAAI7B,EAAE,CAAC6B,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3B9B,IAAAA,EAAE,CAAC6B,SAAD,CAAF,CAAcC,SAAd,CAAwB9B,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACS,SAAH,GAAeA,SAAf;AACAT,EAAE,CAACG,SAAH,GAAeA,kBAAf;eAEeH,E","sourcesContent":["import fs from 'fs';\r\nimport { basename, extname, join } from 'path';\r\nimport Sequelize from 'sequelize';\r\nimport config from '../config/config';\r\n\r\nconst thisFile = basename(module.filename);\r\nconst dbConfig = config.db;\r\n\r\nfunction initSequelize() {\r\n  return dbConfig.use_env_variable\r\n    ? new Sequelize(process.env[dbConfig.use_env_variable])\r\n    : new Sequelize(\r\n        dbConfig.database,\r\n        dbConfig.username,\r\n        dbConfig.password,\r\n        dbConfig\r\n      );\r\n}\r\n\r\nconst sequelize = initSequelize();\r\n\r\nconst isHiddenFile = (file) => file.startsWith('.');\r\nconst isJsFile = (file) => extname(file) === '.js';\r\nconst isTestFile = (file) => file.includes('.test.js');\r\nconst isThisFile = (file) => file === thisFile;\r\n\r\nconst db = {};\r\n\r\nfs.readdirSync(__dirname)\r\n  .filter(\r\n    (file) =>\r\n      !isHiddenFile(file) &&\r\n      !isThisFile(file) &&\r\n      isJsFile(file) &&\r\n      !isTestFile(file)\r\n  )\r\n  .forEach((file) => {\r\n    const model = require(join(__dirname, file)).default;\r\n    model.init(sequelize);\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach((modelName) => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\ndb.Sequelize = Sequelize;\r\n\r\nexport default db;\r\n"],"file":"index.js"}